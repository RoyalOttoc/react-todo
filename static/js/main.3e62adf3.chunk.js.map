{"version":3,"sources":["atoms.tsx","Components/DragabbleCard.tsx","Components/Board.tsx","Components/RemoveBoard.tsx","App.tsx","index.tsx","theme.ts"],"names":["toDoState","atom","key","default","id","text","Completed","Card","styled","div","props","isDragging","theme","cardColor","DragabbleCard","toDoId","toDoText","index","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","React","memo","Wrapper","boardColor","Title","h2","Area","isDraggingOver","isDraggingFromThis","Form","form","Board","toDos","boardId","useForm","register","setValue","handleSubmit","setToDos","useSetRecoilState","onSubmit","toDo","newToDo","Date","now","allBoards","localStorage","setItem","JSON","stringify","type","placeholder","droppableId","Boolean","draggingFromThisWith","droppableProps","map","RemoveBoard","Container","h1","Description","span","Boards","App","useEffect","loadedToDos","getItem","parsedToDos","parse","useRecoilState","onDragEnd","info","destination","source","boardCopy","taskObj","splice","sourceBoard","destinationBoard","Object","keys","GlobalStyle","createGlobalStyle","bgColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e62adf3.chunk.js","sourcesContent":["import {atom} from 'recoil';\n\nexport interface ITodo {\n  id: number;\n  text: string;\n}\n\ninterface IToDoState {\n  [key: string]: ITodo[];\n}\n\nexport const toDoState = atom<IToDoState>({\n  key: 'toDo',\n  default: {\n    'To Do': [\n      {\n        id: 1,\n        text: 'Add To Do',\n      },\n    ],\n    'In Progress': [\n      {\n        id: 2,\n        text: 'Try to drag me',\n      },\n    ],\n    Completed: [\n      {\n        id: 3,\n        text: 'Drag me to the bin',\n      },\n    ],\n  },\n});\n","import React from 'react';\nimport {Draggable} from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nconst Card = styled.div<{isDragging: boolean}>`\n  border-radius: 5px;\n  margin-bottom: 5px;\n  padding: 10px 10px;\n  background-color: ${props =>\n    props.isDragging ? '#e4f2ff' : props.theme.cardColor};\n  box-shadow: ${props =>\n    props.isDragging ? '0px 2px 5px rgba(0, 0, 0, 0.05)' : 'none'};\n`;\n\ninterface IDragabbleCardProps {\n  toDoId: number;\n  toDoText: string;\n\n  index: number;\n}\n\nfunction DragabbleCard({toDoId, toDoText, index}: IDragabbleCardProps) {\n  return (\n    <Draggable draggableId={toDoId + ''} index={index}>\n      {(provided, snapshot) => (\n        <Card\n          isDragging={snapshot.isDragging}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {toDoText}\n        </Card>\n      )}\n    </Draggable>\n  );\n}\n\nexport default React.memo(DragabbleCard);\n","import {Droppable} from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport DragabbleCard from './DragabbleCard';\nimport {useForm} from 'react-hook-form';\nimport {ITodo, toDoState} from '../atoms';\nimport {useSetRecoilState} from 'recoil';\n\nconst Wrapper = styled.div`\n  width: 300px;\n  padding-top: 10px;\n  background-color: ${props => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n\ninterface IAreaProps {\n  isDraggingFromThis: boolean;\n  isDraggingOver: boolean;\n}\n\nconst Area = styled.div<IAreaProps>`\n  background-color: ${props =>\n    props.isDraggingOver\n      ? '#dfe6e9'\n      : props.isDraggingFromThis\n      ? '#b2bec3'\n      : 'transparent'};\n  flex-grow: 1;\n  transition: background-color 0.3s ease-in-out;\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  input {\n    width: 100%;\n    height: 30px;\n  }\n`;\n\ninterface IBoardProps {\n  toDos: ITodo[];\n  boardId: string;\n}\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction Board({toDos, boardId}: IBoardProps) {\n  const {register, setValue, handleSubmit} = useForm<IForm>();\n  const setToDos = useSetRecoilState(toDoState);\n  const onValid = ({toDo}: IForm) => {\n    const newToDo = {\n      id: Date.now(),\n      text: toDo,\n    };\n    setToDos(allBoards => {\n      // localStorage save\n      localStorage.setItem(\n        'boards',\n        JSON.stringify({\n          ...allBoards,\n          [boardId]: [newToDo, ...allBoards[boardId]],\n        }),\n      );\n      return {\n        ...allBoards,\n        [boardId]: [...allBoards[boardId], newToDo],\n      };\n    });\n    setValue('toDo', '');\n  };\n  return (\n    <Wrapper>\n      <Title>{boardId}</Title>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <input {...register('toDo')} type=\"text\" placeholder=\"+ New\" />\n      </Form>\n      <Droppable droppableId={boardId}>\n        {(provided, snapshot) => (\n          <Area\n            isDraggingOver={snapshot.isDraggingOver}\n            isDraggingFromThis={Boolean(snapshot.draggingFromThisWith)}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            {toDos.map((toDo, index) => (\n              <DragabbleCard\n                key={toDo.id}\n                index={index}\n                toDoId={toDo.id}\n                toDoText={toDo.text}\n              />\n            ))}\n            {provided.placeholder}\n          </Area>\n        )}\n      </Droppable>\n    </Wrapper>\n  );\n}\n\nexport default Board;\n","import {Droppable} from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport {ITodo} from '../atoms';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  bottom: 10px;\n  width: 150px;\n  padding-top: 10px;\n  background-color: ${props => props.theme.boardColor};\n  min-height: 150px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 25px;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n\ninterface IAreaProps {\n  isDraggingOver: boolean;\n  isDraggingFromThis: boolean;\n}\n\nconst Area = styled.div<IAreaProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 50px;\n  background-color: ${props =>\n    props.isDraggingOver\n      ? '#8b6262'\n      : props.isDraggingFromThis\n      ? '#bdc3c7'\n      : '#c8d6e5'};\n  transition: background-color 0.2s ease-in-out;\n  border-bottom-left-radius: 25px;\n  border-bottom-right-radius: 25px;\n  flex-grow: 1;\n  padding: 20px;\n`;\n\ninterface IBoardProps {\n  toDos?: ITodo[];\n  boardId: string;\n}\n\nfunction RemoveBoard({boardId}: IBoardProps) {\n  return (\n    <Wrapper>\n      <Title>Bin</Title>\n      <Droppable droppableId={boardId}>\n        {(provided, snapshot) => (\n          <Area\n            isDraggingOver={snapshot.isDraggingOver}\n            isDraggingFromThis={Boolean(snapshot.draggingFromThisWith)}\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            🗑\n          </Area>\n        )}\n      </Droppable>\n    </Wrapper>\n  );\n}\n\nexport default RemoveBoard;\n","import {useEffect} from 'react';\nimport {DragDropContext, DropResult} from 'react-beautiful-dnd';\nimport {useRecoilState} from 'recoil';\nimport styled from 'styled-components';\nimport {toDoState} from './atoms';\nimport Board from './Components/Board';\nimport RemoveBoard from './Components/RemoveBoard';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 36px;\n`;\n\nconst Description = styled.span`\n  text-align: center;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 680px;\n  width: 100%;\n  margin: 0 auto;\n  margin-top: 20px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Boards = styled.div`\n  display: flex;\n  justify-content: cetner;\n  align-items: flex-start;\n  width: 100%;\n  gap: 10px;\n`;\n\nfunction App() {\n  useEffect(() => {\n    // localStorage load\n    const loadedToDos = localStorage.getItem('boards');\n    if (loadedToDos !== null) {\n      const parsedToDos = JSON.parse(loadedToDos);\n      setToDos(parsedToDos);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const onDragEnd = (info: DropResult) => {\n    const {destination, source} = info;\n    if (!destination) return;\n    if (destination?.droppableId === source.droppableId) {\n      setToDos(allBoards => {\n        const boardCopy = [...allBoards[source.droppableId]];\n        const taskObj = boardCopy[source.index];\n        // 1) delete item on source.index\n        boardCopy.splice(source.index, 1);\n        // 2) put back the item on the destination.index\n        boardCopy.splice(destination?.index, 0, taskObj);\n        // 3) save in localstorate\n        localStorage.setItem(\n          'boards',\n          JSON.stringify({\n            ...allBoards,\n            [source.droppableId]: boardCopy,\n          }),\n        );\n        return {\n          ...allBoards,\n          [source.droppableId]: boardCopy,\n        };\n      });\n    }\n    if (destination.droppableId === 'Remove') {\n      // remove item\n      setToDos(allBoards => {\n        const sourceBoard = [...allBoards[source.droppableId]];\n        sourceBoard.splice(source.index, 1);\n        // localStorage save\n        localStorage.setItem(\n          'boards',\n          JSON.stringify({\n            ...allBoards,\n            [source.droppableId]: sourceBoard,\n          }),\n        );\n        return {\n          ...allBoards,\n          [source.droppableId]: sourceBoard,\n        };\n      });\n      return;\n    }\n    if (destination.droppableId !== source.droppableId) {\n      // cross board movement\n      setToDos(allBoards => {\n        const sourceBoard = [...allBoards[source.droppableId]];\n        const taskObj = sourceBoard[source.index];\n\n        const destinationBoard = [...allBoards[destination.droppableId]];\n        sourceBoard.splice(source.index, 1);\n        destinationBoard.splice(destination?.index, 0, taskObj);\n        localStorage.setItem(\n          'boards',\n          JSON.stringify({\n            ...allBoards,\n            [source.droppableId]: sourceBoard,\n            [destination?.droppableId]: destinationBoard,\n          }),\n        );\n        return {\n          ...allBoards,\n          [source.droppableId]: sourceBoard,\n          [destination.droppableId]: destinationBoard,\n        };\n      });\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Container>\n        <Title>To-Do App</Title>\n        <Description>\n          Use this template to keep track of everyday, granular to-do items.\n        </Description>\n        <Wrapper>\n          <Boards>\n            {Object.keys(toDos).map(boardId => (\n              <Board boardId={boardId} key={boardId} toDos={toDos[boardId]} />\n            ))}\n          </Boards>\n          <RemoveBoard boardId={'Remove'} />\n        </Wrapper>\n      </Container>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {RecoilRoot} from 'recoil';\nimport {ThemeProvider} from 'styled-components';\nimport App from './App';\nimport {darkTheme} from './theme';\n\nimport {createGlobalStyle} from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${props => props.theme.bgColor};\n  color: black;\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import {DefaultTheme} from 'styled-components';\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#3F8CF2',\n  boardColor: '#DADFE9',\n  cardColor: 'white',\n};\n"],"sourceRoot":""}